// Load Ghidra's buildExtension.gradle using env or project property
def ghidraInstallDir

if (System.env.GHIDRA_INSTALL_DIR) {
    ghidraInstallDir = System.env.GHIDRA_INSTALL_DIR
} else if (project.hasProperty("GHIDRA_INSTALL_DIR")) {
    ghidraInstallDir = project.getProperty("GHIDRA_INSTALL_DIR")
}

if (ghidraInstallDir) {
    apply from: new File(ghidraInstallDir).getCanonicalPath() + "/support/buildExtension.gradle"
} else {
    throw new GradleException("GHIDRA_INSTALL_DIR is not defined!")
}

//---------------------- Java Compatibility -------------------------------

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

//---------------------- Dependencies & Repositories ----------------------

repositories {
    mavenCentral()
}

dependencies {
    // Latest stable version of the OpenAI Java SDK forked by Theo Kanning
    implementation 'com.theokanning.openai-gpt3-java:service:0.18.3'  // bugfix + minor improvements

    // Use the latest org.json release compatible with Java 21
    implementation 'org.json:json:20240303'
}


//---------------------- Utility Task -------------------------------------

task initWhispererConfig {
    group = "ChatGPTWhisperer"
    description = "Creates a default chatgptwhisperer.config in the user home directory"

    doLast {
        def configFile = new File(System.getProperty("user.home"), "chatgptwhisperer.config")
        if (configFile.exists()) {
            println "Configuration already exists at: ${configFile}"
        } else {
            configFile.text = '''\
# ChatGPTWhisperer Configuration
model=gpt-4o
temperature=0.8
persona=You are a reverse engineering assistant with expertise in embedded firmware and low-level systems.
consoleOutput=true
'''.stripIndent()
            println "Created configuration at: ${configFile}"
        }
    }
}

